services:
  # Key-Value Store (to replace invalid pspg type)
  - type: keyvalue
    name: safetnet-database
    plan: starter
    ipAllowList: []
  # Backend Service (Django)
  - type: web
    name: safetnet-backend
    runtime: python
    plan: starter
    buildCommand: |
      cd SafeTNet
      python3 -m venv venv
      source venv/bin/activate
      pip install --upgrade pip
      pip install -r requirements.txt
    startCommand: |
      cd SafeTNet
      source venv/bin/activate
      python manage.py migrate
      python manage.py collectstatic --noinput
      python manage.py runserver 0.0.0.0:$PORT
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: SafeTNet.settings
      - key: PYTHON_VERSION
        value: 3.13.0
      - key: DATABASE_URL
        fromDatabase:
          name: safetnet-database
          property: connectionString
    autoDeploy: true
    healthCheckPath: /api/auth/test-auth/
    
  # Frontend Service (Next.js)
  - type: web
    name: safetnet-frontend
    runtime: node
    plan: starter
    buildCommand: cd safe-fleet-admin && npm install && npm run build
    startCommand: cd safe-fleet-admin && npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXT_PUBLIC_API_URL
        fromService:
          type: web
          name: safetnet-backend
          property: host
    autoDeploy: true

